plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'jacoco' // Jacoco Plugin 추가
}

group = 'com.seikim'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

/* 24.02.27 기준 최신 버전은 0.8.11 */
jacoco {
    toolVersion = "0.8.11"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
    finalizedBy(jacocoTestReport)
}

/* Jacoco Start */
jacocoTestReport {
    reports {
        xml {
            enabled true
        }
        csv {
            enabled true
        }
        html {
            enabled true
        }

        /* buildDir - https://a-half-human-half-developer.tistory.com/m/189 */
        xml.destination file(project.layout.buildDirectory.dir("jacoco/index.xml")) as File
        csv.destination file(project.layout.buildDirectory.dir("jacoco/index.csv")) as File
        html.destination file(project.layout.buildDirectory.dir("jacoco/index.html")) as File
    }

    afterEvaluate {
        classDirectories.setFrom(
                files(classDirectories.files.collect {
                    fileTree(dir: it, excludes: [
                            "**/*Application*",
                    ])
                })
        )
    }

    finalizedBy(jacocoTestCoverageVerification)
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true
            element = "CLASS"

            limit {
                counter = "LINE"
                value = "COVEREDRATIO"
                minimum = 0.8
            }

            excludes = [
                    '*.*Application'
            ]
        }
    }
}